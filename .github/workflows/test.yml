name: Test arm32v7 container
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: TEST
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v3
        name: Run commands
        id: test
        with:
          arch: armv7
          distro: ubuntu_latest
          # Set an output parameter `uname` for use in subsequent steps
          run: |
            apt-get update
            apt-get install -y -o APT::Immediate-Configure=0 build-essential cmake git libncurses6 libncurses-dev libssl-dev mercurial texinfo zip default-jre imagemagick subversion autoconf automake bison scons libglib2.0-dev bc mtools u-boot-tools flex wget cpio dosfstools libtool rsync device-tree-compiler gettext locales graphviz gcc-multilib g++-multilib libgnutls28-dev
            apt-get clean
            rm -rf /var/lib/apt/lists/*
            cd ..
            git clone --branch REG-Linux-CHA "https://github.com/cjom/REG-Linux.git" ./REG-Linux
            cd REG-Linux
            git submodule init
            git submodule update
            rm -rf .git .github
            CUSTOM_DIR=${PWD}/custom BUILDROOT_DIR=${PWD}/buildroot bash ${PWD}/scripts/linux/mergeToBR.sh
            # After each package is compiled and installed, delete build folder
            # Some files need to be preserved or renamed to avoid errors
            sed -i '/stamp_installed\:/,/stamp_dircleaned\:/ s:^$:\tfind $(BUILD_DIR) -type f -name "libavahi-client.so.*" -execdir mv \{\} libavahi-client.so \\; \
            	find $(BUILD_DIR) -type f -name "libavahi-common.so.*" -execdir mv \{\} libavahi-common.so \\; \
            	find $(BUILD_DIR) -type f -name "libblkid.so.*" -execdir mv \{\} libblkid.so \\; \
            	find $(BUILD_DIR) -type f -not -path "*/buildroot-config/*"  -not \\( -name ".stamp*" -or -name ".br*" -or -name ".config" -or -name "libavahi-client.la" -or -name "libavahi-client.so" -or -name "libavahi-common.la" -or -name "libavahi-common.so" -or -name "libblkid.la" -or -name "libblkid.so" \\) -delete \
            	find $(BUILD_DIR) -type d -mindepth 1 -empty -delete \
            	du -h -s $(PWD) \
            	df -Ph $(PWD) \n :' buildroot/package/pkg-generic.mk
            # After each downloaded package is extracted, delete older and keep latest 3
            sed -i 's:(TAR_OPTIONS) -:(TAR_OPTIONS) - \&\& find \$\$(DL_DIR) -mindepth 1 -maxdepth 1 -type d -printf "%T\@\\t%p\\n" | sort -g | head -n -3 | cut -f 2- | xargs rm -rfv :' buildroot/package/pkg-generic.mk
            # Abort before 6 hours limit to save artifacts
            ( sleep 20700; exit 1 ) < /dev/null & > /dev/null &
            mkdir -p "${GITHUB_WORKSPACE}/output/cha/host" "${GITHUB_WORKSPACE}/output/cha/build"
            bash ${PWD}/configs/createDefconfig.sh ${PWD}/configs/reglinux-cha
            VERBOSE=0 V=0 make O=${PWD}/output/cha BR2_EXTERNAL=${PWD} -C ${PWD}/buildroot reglinux-cha_defconfig
            VERBOSE=0 V=0 make O=${PWD}/output/cha BR2_EXTERNAL=${PWD} -C ${PWD}/buildroot
            # Debug
            echo "Looking for *.img.gz"
            find ${GITHUB_WORKSPACE}/output/cha/ -type f -iname '*.img.gz' -print
            find ${GITHUB_WORKSPACE}/output/cha/ -type f -iname '*.img.gz' -exec mv {} ${GITHUB_WORKSPACE}/ \;
